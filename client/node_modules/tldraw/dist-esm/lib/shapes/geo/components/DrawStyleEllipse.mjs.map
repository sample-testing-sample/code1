{
  "version": 3,
  "sources": ["../../../../../src/lib/shapes/geo/components/DrawStyleEllipse.tsx"],
  "sourcesContent": ["import { EASINGS, HALF_PI, PI2, Vec, perimeterOfEllipse, rng } from '@tldraw/editor'\nimport { getStrokePoints } from '../../shared/freehand/getStrokePoints'\nimport { getSvgPathFromStrokePoints } from '../../shared/freehand/svg'\n\nfunction getEllipseStrokeOptions(strokeWidth: number) {\n\treturn {\n\t\tsize: 1 + strokeWidth,\n\t\tthinning: 0.25,\n\t\tend: { taper: strokeWidth },\n\t\tstart: { taper: strokeWidth },\n\t\tstreamline: 0,\n\t\tsmoothing: 1,\n\t\tsimulatePressure: false,\n\t}\n}\n\nfunction getEllipseStrokePoints(id: string, width: number, height: number, strokeWidth: number) {\n\tconst getRandom = rng(id)\n\n\tconst rx = width / 2\n\tconst ry = height / 2\n\tconst perimeter = perimeterOfEllipse(rx, ry)\n\n\tconst points: Vec[] = []\n\n\tconst start = PI2 * getRandom()\n\tconst length = PI2 + HALF_PI / 2 + Math.abs(getRandom()) * HALF_PI\n\tconst count = Math.max(16, perimeter / 10)\n\n\tfor (let i = 0; i < count; i++) {\n\t\tconst t = i / (count - 1)\n\t\tconst r = start + t * length\n\t\tconst c = Math.cos(r)\n\t\tconst s = Math.sin(r)\n\t\tpoints.push(\n\t\t\tnew Vec(\n\t\t\t\trx * c + width * 0.5 + 0.05 * getRandom(),\n\t\t\t\try * s + height / 2 + 0.05 * getRandom(),\n\t\t\t\tMath.min(\n\t\t\t\t\t1,\n\t\t\t\t\t0.5 +\n\t\t\t\t\t\tMath.abs(0.5 - (getRandom() > 0 ? EASINGS.easeInOutSine(t) : EASINGS.easeInExpo(t))) / 2\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t}\n\n\treturn getStrokePoints(points, getEllipseStrokeOptions(strokeWidth))\n}\n\nexport function getEllipseIndicatorPath(\n\tid: string,\n\twidth: number,\n\theight: number,\n\tstrokeWidth: number\n) {\n\treturn getSvgPathFromStrokePoints(getEllipseStrokePoints(id, width, height, strokeWidth))\n}\n"],
  "mappings": "AAAA,SAAS,SAAS,SAAS,KAAK,KAAK,oBAAoB,WAAW;AACpE,SAAS,uBAAuB;AAChC,SAAS,kCAAkC;AAE3C,SAAS,wBAAwB,aAAqB;AACrD,SAAO;AAAA,IACN,MAAM,IAAI;AAAA,IACV,UAAU;AAAA,IACV,KAAK,EAAE,OAAO,YAAY;AAAA,IAC1B,OAAO,EAAE,OAAO,YAAY;AAAA,IAC5B,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,kBAAkB;AAAA,EACnB;AACD;AAEA,SAAS,uBAAuB,IAAY,OAAe,QAAgB,aAAqB;AAC/F,QAAM,YAAY,IAAI,EAAE;AAExB,QAAM,KAAK,QAAQ;AACnB,QAAM,KAAK,SAAS;AACpB,QAAM,YAAY,mBAAmB,IAAI,EAAE;AAE3C,QAAM,SAAgB,CAAC;AAEvB,QAAM,QAAQ,MAAM,UAAU;AAC9B,QAAM,SAAS,MAAM,UAAU,IAAI,KAAK,IAAI,UAAU,CAAC,IAAI;AAC3D,QAAM,QAAQ,KAAK,IAAI,IAAI,YAAY,EAAE;AAEzC,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC/B,UAAM,IAAI,KAAK,QAAQ;AACvB,UAAM,IAAI,QAAQ,IAAI;AACtB,UAAM,IAAI,KAAK,IAAI,CAAC;AACpB,UAAM,IAAI,KAAK,IAAI,CAAC;AACpB,WAAO;AAAA,MACN,IAAI;AAAA,QACH,KAAK,IAAI,QAAQ,MAAM,OAAO,UAAU;AAAA,QACxC,KAAK,IAAI,SAAS,IAAI,OAAO,UAAU;AAAA,QACvC,KAAK;AAAA,UACJ;AAAA,UACA,MACC,KAAK,IAAI,OAAO,UAAU,IAAI,IAAI,QAAQ,cAAc,CAAC,IAAI,QAAQ,WAAW,CAAC,EAAE,IAAI;AAAA,QACzF;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,SAAO,gBAAgB,QAAQ,wBAAwB,WAAW,CAAC;AACpE;AAEO,SAAS,wBACf,IACA,OACA,QACA,aACC;AACD,SAAO,2BAA2B,uBAAuB,IAAI,OAAO,QAAQ,WAAW,CAAC;AACzF;",
  "names": []
}
