{
  "version": 3,
  "sources": ["../../../../../src/lib/shapes/geo/components/GeoShapeBody.tsx"],
  "sourcesContent": ["import { Group2d, TLGeoShape, useEditor } from '@tldraw/editor'\nimport { STROKE_SIZES } from '../../shared/default-shape-constants'\nimport { getLines } from '../getLines'\nimport { DashStyleCloud } from './DashStyleCloud'\nimport { DashStyleEllipse } from './DashStyleEllipse'\nimport { DashStyleOval } from './DashStyleOval'\nimport { DashStylePolygon } from './DashStylePolygon'\nimport { DrawStyleCloud } from './DrawStyleCloud'\nimport { DrawStylePolygon } from './DrawStylePolygon'\nimport { SolidStyleCloud } from './SolidStyleCloud'\nimport { SolidStyleEllipse } from './SolidStyleEllipse'\nimport { SolidStyleOval } from './SolidStyleOval'\nimport { SolidStylePolygon } from './SolidStylePolygon'\n\nexport function GeoShapeBody({ shape }: { shape: TLGeoShape }) {\n\tconst editor = useEditor()\n\tconst { id, props } = shape\n\tconst { w, color, fill, dash, growY, size } = props\n\tconst strokeWidth = STROKE_SIZES[size]\n\tconst h = props.h + growY\n\n\tswitch (props.geo) {\n\t\tcase 'cloud': {\n\t\t\tif (dash === 'solid') {\n\t\t\t\treturn (\n\t\t\t\t\t<SolidStyleCloud\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tw={w}\n\t\t\t\t\t\th={h}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'dashed' || dash === 'dotted') {\n\t\t\t\treturn (\n\t\t\t\t\t<DashStyleCloud\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tw={w}\n\t\t\t\t\t\th={h}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tdash={dash}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'draw') {\n\t\t\t\treturn (\n\t\t\t\t\t<DrawStyleCloud\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tw={w}\n\t\t\t\t\t\th={h}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'ellipse': {\n\t\t\tif (dash === 'solid') {\n\t\t\t\treturn <SolidStyleEllipse strokeWidth={strokeWidth} w={w} h={h} color={color} fill={fill} />\n\t\t\t} else if (dash === 'dashed' || dash === 'dotted') {\n\t\t\t\treturn (\n\t\t\t\t\t<DashStyleEllipse\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tw={w}\n\t\t\t\t\t\th={h}\n\t\t\t\t\t\tdash={dash}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'draw') {\n\t\t\t\treturn <SolidStyleEllipse strokeWidth={strokeWidth} w={w} h={h} color={color} fill={fill} />\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'oval': {\n\t\t\tif (dash === 'solid') {\n\t\t\t\treturn <SolidStyleOval strokeWidth={strokeWidth} w={w} h={h} color={color} fill={fill} />\n\t\t\t} else if (dash === 'dashed' || dash === 'dotted') {\n\t\t\t\treturn (\n\t\t\t\t\t<DashStyleOval\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tw={w}\n\t\t\t\t\t\th={h}\n\t\t\t\t\t\tdash={dash}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'draw') {\n\t\t\t\treturn <SolidStyleOval strokeWidth={strokeWidth} w={w} h={h} color={color} fill={fill} />\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tconst geometry = editor.getShapeGeometry(shape)\n\t\t\tconst outline =\n\t\t\t\tgeometry instanceof Group2d ? geometry.children[0].vertices : geometry.vertices\n\t\t\tconst lines = getLines(shape.props, strokeWidth)\n\n\t\t\tif (dash === 'solid') {\n\t\t\t\treturn (\n\t\t\t\t\t<SolidStylePolygon\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\toutline={outline}\n\t\t\t\t\t\tlines={lines}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'dashed' || dash === 'dotted') {\n\t\t\t\treturn (\n\t\t\t\t\t<DashStylePolygon\n\t\t\t\t\t\tdash={dash}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\toutline={outline}\n\t\t\t\t\t\tlines={lines}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t} else if (dash === 'draw') {\n\t\t\t\treturn (\n\t\t\t\t\t<DrawStylePolygon\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\toutline={outline}\n\t\t\t\t\t\tlines={lines}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "AAyBK;AAzBL,SAAS,SAAqB,iBAAiB;AAC/C,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAE3B,SAAS,aAAa,EAAE,MAAM,GAA0B;AAC9D,QAAM,SAAS,UAAU;AACzB,QAAM,EAAE,IAAI,MAAM,IAAI;AACtB,QAAM,EAAE,GAAG,OAAO,MAAM,MAAM,OAAO,KAAK,IAAI;AAC9C,QAAM,cAAc,aAAa,IAAI;AACrC,QAAM,IAAI,MAAM,IAAI;AAEpB,UAAQ,MAAM,KAAK;AAAA,IAClB,KAAK,SAAS;AACb,UAAI,SAAS,SAAS;AACrB,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,YAAY,SAAS,UAAU;AAClD,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,QAAQ;AAC3B,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF;AAEA;AAAA,IACD;AAAA,IACA,KAAK,WAAW;AACf,UAAI,SAAS,SAAS;AACrB,eAAO,oBAAC,qBAAkB,aAA0B,GAAM,GAAM,OAAc,MAAY;AAAA,MAC3F,WAAW,SAAS,YAAY,SAAS,UAAU;AAClD,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,QAAQ;AAC3B,eAAO,oBAAC,qBAAkB,aAA0B,GAAM,GAAM,OAAc,MAAY;AAAA,MAC3F;AACA;AAAA,IACD;AAAA,IACA,KAAK,QAAQ;AACZ,UAAI,SAAS,SAAS;AACrB,eAAO,oBAAC,kBAAe,aAA0B,GAAM,GAAM,OAAc,MAAY;AAAA,MACxF,WAAW,SAAS,YAAY,SAAS,UAAU;AAClD,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,QAAQ;AAC3B,eAAO,oBAAC,kBAAe,aAA0B,GAAM,GAAM,OAAc,MAAY;AAAA,MACxF;AACA;AAAA,IACD;AAAA,IACA,SAAS;AACR,YAAM,WAAW,OAAO,iBAAiB,KAAK;AAC9C,YAAM,UACL,oBAAoB,UAAU,SAAS,SAAS,CAAC,EAAE,WAAW,SAAS;AACxE,YAAM,QAAQ,SAAS,MAAM,OAAO,WAAW;AAE/C,UAAI,SAAS,SAAS;AACrB,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,YAAY,SAAS,UAAU;AAClD,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF,WAAW,SAAS,QAAQ;AAC3B,eACC;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,MAEF;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
