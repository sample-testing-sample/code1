{
  "version": 3,
  "sources": ["../../../../../src/lib/shapes/geo/components/DashStylePolygon.tsx"],
  "sourcesContent": ["import { TLGeoShape, Vec, VecLike } from '@tldraw/editor'\nimport * as React from 'react'\nimport { ShapeFill, useDefaultColorTheme } from '../../shared/ShapeFill'\nimport { getPerfectDashProps } from '../../shared/getPerfectDashProps'\n\nexport const DashStylePolygon = React.memo(function DashStylePolygon({\n\tdash,\n\tfill,\n\tcolor,\n\tstrokeWidth,\n\toutline,\n\tlines,\n}: Pick<TLGeoShape['props'], 'dash' | 'fill' | 'color'> & {\n\tstrokeWidth: number\n\toutline: VecLike[]\n\tlines?: VecLike[][]\n}) {\n\tconst theme = useDefaultColorTheme()\n\tconst innerPath = 'M' + outline[0] + 'L' + outline.slice(1) + 'Z'\n\n\treturn (\n\t\t<>\n\t\t\t<ShapeFill theme={theme} d={innerPath} fill={fill} color={color} />\n\t\t\t<g strokeWidth={strokeWidth} stroke={theme[color].solid} fill=\"none\" pointerEvents=\"all\">\n\t\t\t\t{Array.from(Array(outline.length)).map((_, i) => {\n\t\t\t\t\tconst A = outline[i]\n\t\t\t\t\tconst B = outline[(i + 1) % outline.length]\n\n\t\t\t\t\tconst dist = Vec.Dist(A, B)\n\n\t\t\t\t\tconst { strokeDasharray, strokeDashoffset } = getPerfectDashProps(dist, strokeWidth, {\n\t\t\t\t\t\tstyle: dash,\n\t\t\t\t\t\tstart: 'outset',\n\t\t\t\t\t\tend: 'outset',\n\t\t\t\t\t})\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<line\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tx1={A.x}\n\t\t\t\t\t\t\ty1={A.y}\n\t\t\t\t\t\t\tx2={B.x}\n\t\t\t\t\t\t\ty2={B.y}\n\t\t\t\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\t\t\t\tstrokeDashoffset={strokeDashoffset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t{lines &&\n\t\t\t\t\tlines.map(([A, B], i) => {\n\t\t\t\t\t\tconst dist = Vec.Dist(A, B)\n\n\t\t\t\t\t\tconst { strokeDasharray, strokeDashoffset } = getPerfectDashProps(dist, strokeWidth, {\n\t\t\t\t\t\t\tstyle: dash,\n\t\t\t\t\t\t\tstart: 'skip',\n\t\t\t\t\t\t\tend: 'outset',\n\t\t\t\t\t\t\tsnap: dash === 'dotted' ? 4 : undefined,\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tkey={`line_fg_${i}`}\n\t\t\t\t\t\t\t\td={`M${A.x},${A.y}L${B.x},${B.y}`}\n\t\t\t\t\t\t\t\tstroke={theme[color].solid}\n\t\t\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\t\t\t\t\tstrokeDashoffset={strokeDashoffset}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t</g>\n\t\t</>\n\t)\n})\n"],
  "mappings": "AAqBE,mBACC,KACA,YAFD;AArBF,SAAqB,WAAoB;AACzC,YAAY,WAAW;AACvB,SAAS,WAAW,4BAA4B;AAChD,SAAS,2BAA2B;AAE7B,MAAM,mBAAmB,MAAM,KAAK,SAASA,kBAAiB;AAAA,EACpE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,QAAM,QAAQ,qBAAqB;AACnC,QAAM,YAAY,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,MAAM,CAAC,IAAI;AAE9D,SACC,iCACC;AAAA,wBAAC,aAAU,OAAc,GAAG,WAAW,MAAY,OAAc;AAAA,IACjE,qBAAC,OAAE,aAA0B,QAAQ,MAAM,KAAK,EAAE,OAAO,MAAK,QAAO,eAAc,OACjF;AAAA,YAAM,KAAK,MAAM,QAAQ,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM;AAChD,cAAM,IAAI,QAAQ,CAAC;AACnB,cAAM,IAAI,SAAS,IAAI,KAAK,QAAQ,MAAM;AAE1C,cAAM,OAAO,IAAI,KAAK,GAAG,CAAC;AAE1B,cAAM,EAAE,iBAAiB,iBAAiB,IAAI,oBAAoB,MAAM,aAAa;AAAA,UACpF,OAAO;AAAA,UACP,OAAO;AAAA,UACP,KAAK;AAAA,QACN,CAAC;AAED,eACC;AAAA,UAAC;AAAA;AAAA,YAEA,IAAI,EAAE;AAAA,YACN,IAAI,EAAE;AAAA,YACN,IAAI,EAAE;AAAA,YACN,IAAI,EAAE;AAAA,YACN;AAAA,YACA;AAAA;AAAA,UANK;AAAA,QAON;AAAA,MAEF,CAAC;AAAA,MACA,SACA,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM;AACxB,cAAM,OAAO,IAAI,KAAK,GAAG,CAAC;AAE1B,cAAM,EAAE,iBAAiB,iBAAiB,IAAI,oBAAoB,MAAM,aAAa;AAAA,UACpF,OAAO;AAAA,UACP,OAAO;AAAA,UACP,KAAK;AAAA,UACL,MAAM,SAAS,WAAW,IAAI;AAAA,QAC/B,CAAC;AAED,eACC;AAAA,UAAC;AAAA;AAAA,YAEA,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAAA,YAC/B,QAAQ,MAAM,KAAK,EAAE;AAAA,YACrB;AAAA,YACA,MAAK;AAAA,YACL;AAAA,YACA;AAAA;AAAA,UANK,WAAW,CAAC;AAAA,QAOlB;AAAA,MAEF,CAAC;AAAA,OACH;AAAA,KACD;AAEF,CAAC;",
  "names": ["DashStylePolygon"]
}
