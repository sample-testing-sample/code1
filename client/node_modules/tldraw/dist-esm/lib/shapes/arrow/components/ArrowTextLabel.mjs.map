{
  "version": 3,
  "sources": ["../../../../../src/lib/shapes/arrow/components/ArrowTextLabel.tsx"],
  "sourcesContent": ["import { TLArrowShape, TLDefaultColorStyle, TLShapeId, VecLike } from '@tldraw/editor'\nimport * as React from 'react'\nimport { useDefaultColorTheme } from '../../shared/ShapeFill'\nimport { TextLabel } from '../../shared/TextLabel'\nimport { ARROW_LABEL_FONT_SIZES, TEXT_PROPS } from '../../shared/default-shape-constants'\n\nexport const ArrowTextLabel = React.memo(function ArrowTextLabel({\n\tid,\n\ttext,\n\tsize,\n\tfont,\n\tposition,\n\twidth,\n\tisSelected,\n\tlabelColor,\n}: {\n\tid: TLShapeId\n\tposition: VecLike\n\twidth?: number\n\tlabelColor: TLDefaultColorStyle\n\tisSelected: boolean\n} & Pick<TLArrowShape['props'], 'text' | 'size' | 'font'>) {\n\tconst theme = useDefaultColorTheme()\n\treturn (\n\t\t<TextLabel\n\t\t\tid={id}\n\t\t\tclassNamePrefix=\"tl-arrow\"\n\t\t\ttype=\"arrow\"\n\t\t\tfont={font}\n\t\t\tfontSize={ARROW_LABEL_FONT_SIZES[size]}\n\t\t\tlineHeight={TEXT_PROPS.lineHeight}\n\t\t\talign=\"middle\"\n\t\t\tverticalAlign=\"middle\"\n\t\t\ttext={text}\n\t\t\tlabelColor={theme[labelColor].solid}\n\t\t\ttextWidth={width}\n\t\t\tisSelected={isSelected}\n\t\t\tstyle={{\n\t\t\t\ttransform: `translate(${position.x}px, ${position.y}px)`,\n\t\t\t}}\n\t\t/>\n\t)\n})\n"],
  "mappings": "AAwBE;AAvBF,YAAY,WAAW;AACvB,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB,kBAAkB;AAE5C,MAAM,iBAAiB,MAAM,KAAK,SAASA,gBAAe;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAM2D;AAC1D,QAAM,QAAQ,qBAAqB;AACnC,SACC;AAAA,IAAC;AAAA;AAAA,MACA;AAAA,MACA,iBAAgB;AAAA,MAChB,MAAK;AAAA,MACL;AAAA,MACA,UAAU,uBAAuB,IAAI;AAAA,MACrC,YAAY,WAAW;AAAA,MACvB,OAAM;AAAA,MACN,eAAc;AAAA,MACd;AAAA,MACA,YAAY,MAAM,UAAU,EAAE;AAAA,MAC9B,WAAW;AAAA,MACX;AAAA,MACA,OAAO;AAAA,QACN,WAAW,aAAa,SAAS,CAAC,OAAO,SAAS,CAAC;AAAA,MACpD;AAAA;AAAA,EACD;AAEF,CAAC;",
  "names": ["ArrowTextLabel"]
}
