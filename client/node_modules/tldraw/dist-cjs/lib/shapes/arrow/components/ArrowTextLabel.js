"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ArrowTextLabel_exports = {};
__export(ArrowTextLabel_exports, {
  ArrowTextLabel: () => ArrowTextLabel
});
module.exports = __toCommonJS(ArrowTextLabel_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var React = __toESM(require("react"));
var import_ShapeFill = require("../../shared/ShapeFill");
var import_TextLabel = require("../../shared/TextLabel");
var import_default_shape_constants = require("../../shared/default-shape-constants");
const ArrowTextLabel = React.memo(function ArrowTextLabel2({
  id,
  text,
  size,
  font,
  position,
  width,
  isSelected,
  labelColor
}) {
  const theme = (0, import_ShapeFill.useDefaultColorTheme)();
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_TextLabel.TextLabel,
    {
      id,
      classNamePrefix: "tl-arrow",
      type: "arrow",
      font,
      fontSize: import_default_shape_constants.ARROW_LABEL_FONT_SIZES[size],
      lineHeight: import_default_shape_constants.TEXT_PROPS.lineHeight,
      align: "middle",
      verticalAlign: "middle",
      text,
      labelColor: theme[labelColor].solid,
      textWidth: width,
      isSelected,
      style: {
        transform: `translate(${position.x}px, ${position.y}px)`
      }
    }
  );
});
//# sourceMappingURL=ArrowTextLabel.js.map
