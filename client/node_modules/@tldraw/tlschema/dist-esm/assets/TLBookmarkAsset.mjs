import { createMigrationIds, createRecordMigrationSequence } from "@tldraw/store";
import { T } from "@tldraw/validate";
import { createAssetValidator } from "./TLBaseAsset.mjs";
const bookmarkAssetValidator = createAssetValidator(
  "bookmark",
  T.object({
    title: T.string,
    description: T.string,
    image: T.string,
    src: T.srcUrl.nullable()
  })
);
const Versions = createMigrationIds("com.tldraw.asset.bookmark", {
  MakeUrlsValid: 1
});
const bookmarkAssetMigrations = createRecordMigrationSequence({
  sequenceId: "com.tldraw.asset.bookmark",
  recordType: "asset",
  filter: (asset) => asset.type === "bookmark",
  sequence: [
    {
      id: Versions.MakeUrlsValid,
      up: (asset) => {
        if (!T.srcUrl.isValid(asset.props.src)) {
          asset.props.src = "";
        }
      },
      down: (_asset) => {
      }
    }
  ]
});
export {
  bookmarkAssetMigrations,
  bookmarkAssetValidator,
  Versions as bookmarkAssetVersions
};
//# sourceMappingURL=TLBookmarkAsset.mjs.map
