{
  "version": 3,
  "sources": ["../../../../src/lib/primitives/geometry/Stadium2d.ts"],
  "sourcesContent": ["import { Vec } from '../Vec'\nimport { HALF_PI, PI } from '../utils'\nimport { Ellipse2d } from './Ellipse2d'\nimport { Geometry2dOptions } from './Geometry2d'\n\nconst STADIUM_VERTICES_LENGTH = 18\n\n/** @public */\nexport class Stadium2d extends Ellipse2d {\n\tconstructor(\n\t\tpublic config: Omit<Geometry2dOptions, 'isClosed'> & { width: number; height: number }\n\t) {\n\t\tsuper({ ...config })\n\t}\n\n\tgetVertices() {\n\t\tconst w = Math.max(1, this.w)\n\t\tconst h = Math.max(1, this.h)\n\t\tconst cx = w / 2\n\t\tconst cy = h / 2\n\t\tconst points: Vec[] = Array(STADIUM_VERTICES_LENGTH)\n\t\tlet t1: number, t2: number\n\t\tif (h > w) {\n\t\t\tfor (let i = 0; i < STADIUM_VERTICES_LENGTH - 1; i++) {\n\t\t\t\tt1 = -PI + (PI * i) / (STADIUM_VERTICES_LENGTH - 2)\n\t\t\t\tt2 = (PI * i) / (STADIUM_VERTICES_LENGTH - 2)\n\t\t\t\tpoints[i] = new Vec(cx + cx * Math.cos(t1), cx + cx * Math.sin(t1))\n\t\t\t\tpoints[i + (STADIUM_VERTICES_LENGTH - 1)] = new Vec(\n\t\t\t\t\tcx + cx * Math.cos(t2),\n\t\t\t\t\th - cx + cx * Math.sin(t2)\n\t\t\t\t)\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < STADIUM_VERTICES_LENGTH - 1; i++) {\n\t\t\t\tt1 = -HALF_PI + (PI * i) / (STADIUM_VERTICES_LENGTH - 2)\n\t\t\t\tt2 = HALF_PI + (PI * -i) / (STADIUM_VERTICES_LENGTH - 2)\n\t\t\t\tpoints[i] = new Vec(w - cy + cy * Math.cos(t1), h - cy + cy * Math.sin(t1))\n\t\t\t\tpoints[i + (STADIUM_VERTICES_LENGTH - 1)] = new Vec(\n\t\t\t\t\tcy - cy * Math.cos(t2),\n\t\t\t\t\th - cy + cy * Math.sin(t2)\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn points\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoB;AACpB,mBAA4B;AAC5B,uBAA0B;AAG1B,MAAM,0BAA0B;AAGzB,MAAM,kBAAkB,2BAAU;AAAA,EACxC,YACQ,QACN;AACD,UAAM,EAAE,GAAG,OAAO,CAAC;AAFZ;AAAA,EAGR;AAAA,EAEA,cAAc;AACb,UAAM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AACf,UAAM,SAAgB,MAAM,uBAAuB;AACnD,QAAI,IAAY;AAChB,QAAI,IAAI,GAAG;AACV,eAAS,IAAI,GAAG,IAAI,0BAA0B,GAAG,KAAK;AACrD,aAAK,CAAC,kBAAM,kBAAK,KAAM,0BAA0B;AACjD,aAAM,kBAAK,KAAM,0BAA0B;AAC3C,eAAO,CAAC,IAAI,IAAI,eAAI,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAClE,eAAO,KAAK,0BAA0B,EAAE,IAAI,IAAI;AAAA,UAC/C,KAAK,KAAK,KAAK,IAAI,EAAE;AAAA,UACrB,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE;AAAA,QAC1B;AAAA,MACD;AAAA,IACD,OAAO;AACN,eAAS,IAAI,GAAG,IAAI,0BAA0B,GAAG,KAAK;AACrD,aAAK,CAAC,uBAAW,kBAAK,KAAM,0BAA0B;AACtD,aAAK,uBAAW,kBAAK,CAAC,KAAM,0BAA0B;AACtD,eAAO,CAAC,IAAI,IAAI,eAAI,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAC1E,eAAO,KAAK,0BAA0B,EAAE,IAAI,IAAI;AAAA,UAC/C,KAAK,KAAK,KAAK,IAAI,EAAE;AAAA,UACrB,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE;AAAA,QAC1B;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
